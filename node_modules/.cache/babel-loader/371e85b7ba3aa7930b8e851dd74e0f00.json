{"ast":null,"code":"import axios from \"axios\";\n\nconst addToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst auth = axios.create({\n  baseURL: \"http://localhost:4500/api/user/\"\n});\nexport const login = async userData => {\n  try {\n    const data = auth.post(`/login`, {\n      email: userData.login,\n      password: userData.password\n    });\n    console.log(await data);\n    const token = (await data).data.token;\n    addToken(token);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst signup = async data => {\n  const {\n    data: result\n  } = await axios.post(\"https://connections-api.herokuapp.com/users/signup/\", data);\n  addToken(result.token);\n  return result;\n};\n\nconst logout = async () => {\n  const {\n    data: result\n  } = await axios.post(\"https://connections-api.herokuapp.com/users/logout/\");\n  return result;\n};\n\nconst getCurrent = async token => {\n  addToken(token);\n  const {\n    data: result\n  } = await axios.get(\"https://connections-api.herokuapp.com/users/current/\");\n  return result;\n};\n\nconst authApi = {\n  signup,\n  login,\n  logout,\n  getCurrent\n};\nexport default authApi;","map":{"version":3,"names":["axios","addToken","token","defaults","headers","common","Authorization","auth","create","baseURL","login","userData","data","post","email","password","console","log","error","signup","result","logout","getCurrent","get","authApi"],"sources":["C:/Users/Gwen/Documents/GitHub/Ejednevnik/diary/src/share/auth.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst addToken = token => {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n}\r\nconst auth=axios.create({\r\n    baseURL:\"http://localhost:4500/api/user/\"\r\n  })\r\n  \r\nexport const login = async (userData) => {\r\n    try {\r\n      const data = auth.post(`/login`,{email:userData.login,password:userData.password});\r\n      console.log(await data);\r\n      const token= (await data).data.token\r\n     addToken(token);\r\n     return data\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\nconst signup =async(data)=>{\r\n    const {data:result} =await axios.post(\"https://connections-api.herokuapp.com/users/signup/\",data)\r\n    addToken(result.token)\r\n    return result\r\n}\r\n\r\nconst logout =async()=>{\r\n    const {data:result}=await axios.post(\"https://connections-api.herokuapp.com/users/logout/\")\r\n    return result\r\n}\r\nconst getCurrent = async (token) => {\r\n    addToken(token);\r\n    const {data: result} = await axios.get(\"https://connections-api.herokuapp.com/users/current/\");\r\n\r\n    return result;\r\n}\r\n\r\n\r\nconst authApi={\r\n    signup,\r\n    login,\r\n    logout,\r\n    getCurrent\r\n}\r\nexport default authApi"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EACtBF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASJ,KAAM,EAA9D;AACH,CAFD;;AAGA,MAAMK,IAAI,GAACP,KAAK,CAACQ,MAAN,CAAa;EACpBC,OAAO,EAAC;AADY,CAAb,CAAX;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAOC,QAAP,IAAoB;EACrC,IAAI;IACF,MAAMC,IAAI,GAAGL,IAAI,CAACM,IAAL,CAAW,QAAX,EAAmB;MAACC,KAAK,EAACH,QAAQ,CAACD,KAAhB;MAAsBK,QAAQ,EAACJ,QAAQ,CAACI;IAAxC,CAAnB,CAAb;IACAC,OAAO,CAACC,GAAR,CAAY,MAAML,IAAlB;IACA,MAAMV,KAAK,GAAE,CAAC,MAAMU,IAAP,EAAaA,IAAb,CAAkBV,KAA/B;IACDD,QAAQ,CAACC,KAAD,CAAR;IACA,OAAOU,IAAP;EACA,CAND,CAME,OAAOM,KAAP,EAAc;IACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACD;AACF,CAVI;;AAeP,MAAMC,MAAM,GAAE,MAAMP,IAAN,IAAa;EACvB,MAAM;IAACA,IAAI,EAACQ;EAAN,IAAe,MAAMpB,KAAK,CAACa,IAAN,CAAW,qDAAX,EAAiED,IAAjE,CAA3B;EACAX,QAAQ,CAACmB,MAAM,CAAClB,KAAR,CAAR;EACA,OAAOkB,MAAP;AACH,CAJD;;AAMA,MAAMC,MAAM,GAAE,YAAS;EACnB,MAAM;IAACT,IAAI,EAACQ;EAAN,IAAc,MAAMpB,KAAK,CAACa,IAAN,CAAW,qDAAX,CAA1B;EACA,OAAOO,MAAP;AACH,CAHD;;AAIA,MAAME,UAAU,GAAG,MAAOpB,KAAP,IAAiB;EAChCD,QAAQ,CAACC,KAAD,CAAR;EACA,MAAM;IAACU,IAAI,EAAEQ;EAAP,IAAiB,MAAMpB,KAAK,CAACuB,GAAN,CAAU,sDAAV,CAA7B;EAEA,OAAOH,MAAP;AACH,CALD;;AAQA,MAAMI,OAAO,GAAC;EACVL,MADU;EAEVT,KAFU;EAGVW,MAHU;EAIVC;AAJU,CAAd;AAMA,eAAeE,OAAf"},"metadata":{},"sourceType":"module"}